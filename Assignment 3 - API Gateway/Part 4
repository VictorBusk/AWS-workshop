using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Amazon.Lambda.Core;
using Amazon.Lambda.APIGatewayEvents;
using Newtonsoft.Json;

[assembly:LambdaSerializer(typeof(Amazon.Lambda.Serialization.SystemTextJson.DefaultLambdaJsonSerializer))]

namespace HelloWorld
{
    public class Functions
    {
        public async Task<APIGatewayProxyResponse> FunctionHandler(APIGatewayProxyRequest request, ILambdaContext context)
        {
            var response = new APIGatewayProxyResponse();
            response.Headers = new Dictionary<string, string>();
            response.Headers.Add("Content-Type", "application/json");

            try
            {
                string name = null;
                if (request.PathParameters != null && request.PathParameters.ContainsKey("name"))
                {
                    name = request.PathParameters["name"];
                }

                if (string.IsNullOrEmpty(name))
                {
                    response.Body = JsonConvert.SerializeObject(new { message = "Hello, world!" });
                }
                else
                {
                    response.Body = JsonConvert.SerializeObject(new { message = $"Hello, {name}!" });
                }

                response.StatusCode = 200;
            }
            catch (Exception ex)
            {
                response.Body = JsonConvert.SerializeObject(new { error = ex.Message });
                response.StatusCode = 500;
            }

            return response;
        }
    }
}
